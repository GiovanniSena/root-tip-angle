function final_prep(handles)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%          Extracting only the tip and then from that the relevant [x,y] values %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
unified_skeleton = evalin('base', 'unified_skeleton');
%  % Creating a rotated matrix
[lastrow, junk] = find(unified_skeleton, 1, 'last' ); % last white pixel is tip of the root
unified_skeleton_size = size(unified_skeleton);
crop_window = [0, lastrow-50, unified_skeleton_size(2), 65];
final_skeleton = imcrop(unified_skeleton,crop_window);
final_skeletonR=imrotate(final_skeleton,90);
%  % Vectors for positions of 1's (new x ordered [x after rotation])
[skerowx,skecolx] = find(final_skeletonR);
%  % And a matrix
skelmatR = cat(2,skecolx,skerowx);

% Attempting to implement the optional "choose the point with mean
% curvature". 13.8.18 13:29
% Asking the user if they want to choose the point with highest mean
% curvature.
answer = questdlg({'Would you like to choose the point with highest mean curvature?','Doing so might help with the calculations'}, 'Curvature?','Yes','No','No');

switch answer
    case 'Yes'
        flag = true;
    case 'No'
        flag = false;
end
% If the user clicked Yes they will be prompted to choose one point whose
% coordinates will be inserted to usercurvx and usercurvy. Then, the point
% in skelmatR closest to that point will be chosen
if (flag == true)
    uiwait(msgbox({'Choose the point in the skeleton that seems to have the highest curvature','Press ENTER to finish'}, 'Curvature!'));
    point_get(1,1,'usercurvx','usercurvy',handles.alt_img) 
    curvdist = sqrt((skelmatR(:,1)-usercurvx).^2+(skelmatR(:,2)-usercurvy).^2);
end

%'maxcurvx','maxcurvy'
% In order to be used in curvature script
assignin('base','skelmatR',skelmatR);


end